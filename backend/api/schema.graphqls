# GraphQL schema example
#
# https://gqlgen.com/getting-started/

directive @goModel(model: String, models: [String!]) on OBJECT
	| INPUT_OBJECT
	| SCALAR
	| ENUM
	| INTERFACE
	| UNION

directive @goField(
	forceResolver: Boolean
	name: String
) on INPUT_FIELD_DEFINITION | FIELD_DEFINITION

scalar Upload

scalar Any

interface Node {
	id:   ID!
}


type File implements Node {
	id:   ID!
	name: String!
	originalName: String
	mimetype: String!
	size: Int!
	extension: String!
	description: String
	isImage: Boolean!
}

enum ValueType {
	STRING
	NUMBER
}

type Query {
	footprints: [Footprint!]
	footprint(id: ID!): Footprint!

	footprintCategories: [FootprintCategory!]
	footprintCategory(id: ID!): FootprintCategory!

	footprintAttachments: [File!]
	footprintAttachment(id: ID!): File!


	parts(category: PartCategoryInput): [Part!]
	part(id: ID!): Part!

	partCategories(category: PartCategoryInput): [PartCategory!]
	partCategory(id: ID!): PartCategory!

	partMeasurementUnits: [PartMeasurementUnit!]
	partMeasurementUnit(id: ID!): PartMeasurementUnit!

	partAttachments: [File!]
	partAttachment(id: ID!): File!

	partParameters: [PartParameter!]
	partParameter(id: ID!): PartParameter!



	storageLocations(category: StorageLocationCategoryInput): [StorageLocation!]
	storageLocation(id: ID!): StorageLocation!

	storageLocationCategories(category: StorageLocationCategoryInput): [StorageLocationCategory!]
	storageLocationCategory(id: ID!): StorageLocationCategory!

	storageLocationImages: [File!]
	storageLocationImage(id: ID!): File!



	siPrefixes(params: QuerySiPrefixInput): [SiPrefix!]
	siPrefix(id: ID!): SiPrefix!

	units(params: QueryUnitInput): [Unit!]
	unit(id: ID!): Unit!
}

type Mutation {
	createFootprint(input: FootprintInput!): Footprint!
	updateFootprint(id: ID!, input: FootprintInput!): Footprint!
	deleteFootprint(id: ID!): Footprint!

	createFootprintCategory(input: FootprintCategoryInput!): FootprintCategory!
	updateFootprintCategory(id: ID!, input: FootprintCategoryInput!): FootprintCategory!
	deleteFootprintCategory(id: ID!): FootprintCategory!

	createFootprintAttachment(isImage: Boolean!, file: Upload!): File!
	updateFootprintAttachment(id: ID!, isImage: Boolean!, file: Upload!): File!
	deleteFootprintAttachment(id: ID!): File!


	createPartMeasurementUnit(input: PartMeasurementUnitInput!):          PartMeasurementUnit!
	updatePartMeasurementUnit(id: ID!, input: PartMeasurementUnitInput!): PartMeasurementUnit!
	deletePartMeasurementUnit(id: ID!):                                 PartMeasurementUnit!

	createPartCategory(input: PartCategoryInput!):          PartCategory!
	updatePartCategory(id: ID!, input: PartCategoryInput!): PartCategory!
	deletePartCategory(id: ID!):                          PartCategory!

	createPart(input: PartInput!): Part!
	updatePart(id: ID!, input: PartInput!): Part!
	deletePart(id: ID!): Part!

	createPartAttachment(isImage: Boolean!, file: Upload!): File!
	updatePartAttachment(id: ID!, isImage: Boolean!, file: Upload!): File!
	deletePartAttachment(id: ID!): File!

	createPartParameter(input: PartParameterInput!): PartParameter!
	updatePartParameter(id: ID!, input: PartParameterInput!): PartParameter!
	deletePartParameter(id: ID!): PartParameter!



	createStorageLocationCategory(input: StorageLocationCategoryInput!):          StorageLocationCategory!
	updateStorageLocationCategory(id: ID!, input: StorageLocationCategoryInput!): StorageLocationCategory!
	deleteStorageLocationCategory(id: ID!):                                     StorageLocationCategory!

	createStorageLocation(input: StorageLocationInput!):          StorageLocation!
	updateStorageLocation(id: ID!, input: StorageLocationInput!): StorageLocation!
	deleteStorageLocation(id: ID!):                             StorageLocation!

	createStorageLocationImage(file: Upload!): File!
	updateStorageLocationImage(id: ID!, file: Upload!): File!
	deleteStorageLocationImage(id: ID!): File!



	createSiPrefix(input: SiPrefixInput!):          SiPrefix!
	updateSiPrefix(id: ID!, input: SiPrefixInput!): SiPrefix!
	deleteSiPrefix(id: ID!):                  SiPrefix!

	createUnit(input: UnitInput!):          Unit!
	updateUnit(id: ID!, input: UnitInput!): Unit!
	deleteUnit(id: ID!):                  Unit!
}